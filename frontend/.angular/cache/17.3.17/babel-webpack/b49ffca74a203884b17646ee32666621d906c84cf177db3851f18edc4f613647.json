{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction AddEditComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Employee ID is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_9_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.employeeId.errors.required);\n  }\n}\nfunction AddEditComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const account_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r2.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\"\", account_r2.firstName, \" \", account_r2.lastName, \" (\", account_r2.email, \")\");\n  }\n}\nfunction AddEditComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"User account is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_17_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.userId.errors.required);\n  }\n}\nfunction AddEditComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Position is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_22_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.position.errors.required);\n  }\n}\nfunction AddEditComponent_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Hire date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_27_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.hireDate.errors.required);\n  }\n}\nfunction AddEditComponent_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const department_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", department_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(department_r3.name);\n  }\n}\nfunction AddEditComponent_div_35_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Department is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, AddEditComponent_div_35_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.departmentId.errors.required);\n  }\n}\nfunction AddEditComponent_span_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 28);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, accountService, departmentService, employeeService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.departmentService = departmentService;\n      this.employeeService = employeeService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      this.form = this.formBuilder.group({\n        employeeId: ['', Validators.required],\n        userId: ['', Validators.required],\n        position: ['', Validators.required],\n        hireDate: ['', Validators.required],\n        departmentId: ['', Validators.required],\n        status: ['active']\n      });\n      // Load accounts and departments for dropdowns\n      this.accountService.getAll().pipe(first()).subscribe(accounts => this.accounts = accounts);\n      this.departmentService.getAll().pipe(first()).subscribe(departments => this.departments = departments);\n      if (!this.isAddMode) {\n        this.employeeService.getById(this.id).pipe(first()).subscribe(x => {\n          this.form.patchValue(x);\n        });\n      }\n    }\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      if (this.isAddMode) {\n        this.createEmployee();\n      } else {\n        this.updateEmployee();\n      }\n    }\n    createEmployee() {\n      this.employeeService.create(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee created successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    updateEmployee() {\n      this.employeeService.update(this.id, this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Update successful', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function AddEditComponent_Factory(t) {\n        return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.AlertService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AddEditComponent,\n        selectors: [[\"ng-component\"]],\n        decls: 50,\n        vars: 26,\n        consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"employeeId\"], [\"type\", \"text\", \"formControlName\", \"employeeId\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"userId\"], [\"formControlName\", \"userId\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"position\"], [\"type\", \"text\", \"formControlName\", \"position\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"hireDate\"], [\"type\", \"date\", \"formControlName\", \"hireDate\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"departmentId\"], [\"formControlName\", \"departmentId\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"status\"], [\"formControlName\", \"status\", 1, \"form-control\"], [\"value\", \"active\"], [\"value\", \"inactive\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm\", 4, \"ngIf\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [3, \"value\"], [1, \"spinner-border\", \"spinner-border-sm\"]],\n        template: function AddEditComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n            i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_Template_form_ngSubmit_4_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n            i0.ɵɵtext(7, \"Employee ID\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(8, \"input\", 6);\n            i0.ɵɵtemplate(9, AddEditComponent_div_9_Template, 2, 1, \"div\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n            i0.ɵɵtext(12, \"User Account\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"select\", 9)(14, \"option\", 10);\n            i0.ɵɵtext(15, \"-- Select Account --\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(16, AddEditComponent_option_16_Template, 2, 4, \"option\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(17, AddEditComponent_div_17_Template, 2, 1, \"div\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 12);\n            i0.ɵɵtext(20, \"Position\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(21, \"input\", 13);\n            i0.ɵɵtemplate(22, AddEditComponent_div_22_Template, 2, 1, \"div\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 14);\n            i0.ɵɵtext(25, \"Hire Date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(26, \"input\", 15);\n            i0.ɵɵtemplate(27, AddEditComponent_div_27_Template, 2, 1, \"div\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"div\", 4)(29, \"label\", 16);\n            i0.ɵɵtext(30, \"Department\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"select\", 17)(32, \"option\", 10);\n            i0.ɵɵtext(33, \"-- Select Department --\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(34, AddEditComponent_option_34_Template, 2, 2, \"option\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(35, AddEditComponent_div_35_Template, 2, 1, \"div\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(36, \"div\", 4)(37, \"label\", 18);\n            i0.ɵɵtext(38, \"Status\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(39, \"select\", 19)(40, \"option\", 20);\n            i0.ɵɵtext(41, \"Active\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(42, \"option\", 21);\n            i0.ɵɵtext(43, \"Inactive\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(44, \"div\", 4)(45, \"button\", 22);\n            i0.ɵɵtemplate(46, AddEditComponent_span_46_Template, 1, 0, \"span\", 23);\n            i0.ɵɵtext(47, \" Save \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(48, \"a\", 24);\n            i0.ɵɵtext(49, \"Cancel\");\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isAddMode ? \"Add\" : \"Edit\", \" Employee \");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.submitted && ctx.f.employeeId.errors));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.employeeId.errors);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx.submitted && ctx.f.userId.errors));\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.accounts);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.userId.errors);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx.submitted && ctx.f.position.errors));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.position.errors);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx.submitted && ctx.f.hireDate.errors));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.hireDate.errors);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c0, ctx.submitted && ctx.f.departmentId.errors));\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.departmentId.errors);\n            i0.ɵɵadvance(10);\n            i0.ɵɵproperty(\"disabled\", ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          }\n        },\n        dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n        encapsulation: 2\n      });\n    }\n  }\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
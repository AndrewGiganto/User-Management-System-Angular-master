{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = (a0, a1, a2, a3) => ({\n  \"badge badge-secondary\": a0,\n  \"badge badge-warning\": a1,\n  \"badge badge-success\": a2,\n  \"badge badge-danger\": a3\n});\nfunction ViewComponent_div_4_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h6\");\n    i0.ɵɵtext(2, \"Details:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"pre\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"json\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 1, ctx_r0.workflow.details));\n  }\n}\nfunction ViewComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"h5\");\n    i0.ɵɵtext(2, \"Workflow Information\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Employee:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"Type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\")(12, \"strong\");\n    i0.ɵɵtext(13, \"Status:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"span\", 6);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"p\")(17, \"strong\");\n    i0.ɵɵtext(18, \"Created:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, ViewComponent_div_4_div_21_Template, 6, 3, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r0.workflow.employee == null ? null : ctx_r0.workflow.employee.account == null ? null : ctx_r0.workflow.employee.account.firstName, \" \", ctx_r0.workflow.employee == null ? null : ctx_r0.workflow.employee.account == null ? null : ctx_r0.workflow.employee.account.lastName, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.workflow.type, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(10, _c0, ctx_r0.workflow.status === \"pending\", ctx_r0.workflow.status === \"in-progress\", ctx_r0.workflow.status === \"completed\", ctx_r0.workflow.status === \"rejected\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.workflow.status, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(20, 7, ctx_r0.workflow.created, \"medium\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.workflow.details);\n  }\n}\nfunction ViewComponent_form_5_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n}\nfunction ViewComponent_form_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function ViewComponent_form_5_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 10)(2, \"label\", 11);\n    i0.ɵɵtext(3, \"Update Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 12)(5, \"option\", 13);\n    i0.ɵɵtext(6, \"Pending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"option\", 14);\n    i0.ɵɵtext(8, \"In Progress\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 15);\n    i0.ɵɵtext(10, \"Completed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 16);\n    i0.ɵɵtext(12, \"Rejected\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 10)(14, \"button\", 17);\n    i0.ɵɵtemplate(15, ViewComponent_form_5_span_15_Template, 1, 0, \"span\", 18);\n    i0.ɵɵtext(16, \" Update \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"a\", 19);\n    i0.ɵɵtext(18, \"Back\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.loading);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loading);\n  }\n}\nexport let ViewComponent = /*#__PURE__*/(() => {\n  class ViewComponent {\n    constructor(formBuilder, route, router, workflowService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.workflowService = workflowService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n      this.employeeId = null;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      // Get employeeId from query params if available\n      this.route.queryParams.subscribe(params => {\n        this.employeeId = params['employeeId'] ? Number(params['employeeId']) : null;\n      });\n      this.form = this.formBuilder.group({\n        status: ['']\n      });\n      // Since we don't have getById in workflowService, we'll use getByEmployee\n      // and filter the specific workflow (this is a workaround)\n      if (this.employeeId) {\n        this.loading = true;\n        this.workflowService.getByEmployee(this.employeeId).pipe(first()).subscribe({\n          next: workflows => {\n            console.log('Route ID:', this.id);\n            console.log('All workflows:', workflows);\n            this.workflow = workflows.find(w => w.id == this.id);\n            console.log('Found workflow:', this.workflow); // <-- Add this line\n            if (this.workflow) {\n              console.log('Workflow exists, patching form');\n              this.form.patchValue({\n                status: this.workflow.status\n              });\n            } else {\n              this.alertService.error('Workflow not found in list');\n            }\n            this.loading = false;\n          },\n          error: error => {\n            this.alertService.error(error);\n            this.loading = false;\n          }\n        });\n      }\n    }\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.workflowService.updateStatus(this.id, this.form.value.status).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Workflow updated', {\n            keepAfterRouteChange: true\n          });\n          // Navigate back to list with employeeId if available\n          const queryParams = this.employeeId ? {\n            employeeId: this.employeeId\n          } : {};\n          this.router.navigate(['../../'], {\n            relativeTo: this.route,\n            queryParams\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function ViewComponent_Factory(t) {\n        return new (t || ViewComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.WorkflowService), i0.ɵɵdirectiveInject(i3.AlertService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ViewComponent,\n        selectors: [[\"ng-component\"]],\n        decls: 6,\n        vars: 2,\n        consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"mb-4\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"mb-4\"], [3, \"ngClass\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [1, \"mt-3\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"status\"], [\"formControlName\", \"status\", 1, \"form-control\"], [\"value\", \"pending\"], [\"value\", \"in-progress\"], [\"value\", \"completed\"], [\"value\", \"rejected\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm\", 4, \"ngIf\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-link\"], [1, \"spinner-border\", \"spinner-border-sm\"]],\n        template: function ViewComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n            i0.ɵɵtext(2, \" Workflow Details \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 2);\n            i0.ɵɵtemplate(4, ViewComponent_div_4_Template, 22, 15, \"div\", 3)(5, ViewComponent_form_5_Template, 19, 3, \"form\", 4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ctx.workflow);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.workflow);\n          }\n        },\n        dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink, i4.JsonPipe, i4.DatePipe],\n        encapsulation: 2\n      });\n    }\n  }\n  return ViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction OnboardingComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", employee_r1.account == null ? null : employee_r1.account.firstName, \" \", employee_r1.account == null ? null : employee_r1.account.lastName, \" (\", employee_r1.employeeId, \") \");\n  }\n}\nfunction OnboardingComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 15);\n  }\n}\nexport let OnboardingComponent = /*#__PURE__*/(() => {\n  class OnboardingComponent {\n    constructor(formBuilder, router, route, employeeService, workflowService, alertService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.route = route;\n      this.employeeService = employeeService;\n      this.workflowService = workflowService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        employeeId: ['', []],\n        details: ['']\n      });\n      // Load employees for dropdown\n      this.employeeService.getAll().pipe(first()).subscribe(employees => this.employees = employees);\n    }\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.workflowService.initiateOnboarding(this.form.value).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Onboarding workflow initiated', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function OnboardingComponent_Factory(t) {\n        return new (t || OnboardingComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.WorkflowService), i0.ɵɵdirectiveInject(i3.AlertService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: OnboardingComponent,\n        selectors: [[\"ng-component\"]],\n        decls: 22,\n        vars: 4,\n        consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"employeeId\"], [\"formControlName\", \"employeeId\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"details\"], [\"formControlName\", \"details\", \"rows\", \"5\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm\", 4, \"ngIf\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-link\"], [3, \"value\"], [1, \"spinner-border\", \"spinner-border-sm\"]],\n        template: function OnboardingComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n            i0.ɵɵtext(2, \" Initiate Onboarding Workflow \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n            i0.ɵɵlistener(\"ngSubmit\", function OnboardingComponent_Template_form_ngSubmit_4_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n            i0.ɵɵtext(7, \"Employee\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"select\", 6)(9, \"option\", 7);\n            i0.ɵɵtext(10, \"-- Select Employee --\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(11, OnboardingComponent_option_11_Template, 2, 4, \"option\", 8);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n            i0.ɵɵtext(14, \"Details (JSON)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"textarea\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"div\", 4)(17, \"button\", 11);\n            i0.ɵɵtemplate(18, OnboardingComponent_span_18_Template, 1, 0, \"span\", 12);\n            i0.ɵɵtext(19, \" Initiate \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"a\", 13);\n            i0.ɵɵtext(21, \"Cancel\");\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"disabled\", ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          }\n        },\n        dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n        encapsulation: 2\n      });\n    }\n  }\n  return OnboardingComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}